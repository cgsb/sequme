open build/Common
open build/OCaml
open configure/Configure

DefineCommandVars()

.PHONY: clean install uninstall doc

USE_OCAMLFIND = true
if $(not $(OCAMLFIND_EXISTS))
  ConfMsgError($'ocamlfind not found')

DEPENDENCIES[] = core sexplib
CAMLP4_PACKS[]= sexplib.syntax
OCAMLPACKS[] = $(DEPENDENCIES) $(CAMLP4_PACKS)

LIB = purel
LIB_VERSION = 0.1-dev

NATIVE_ENABLED = $(OCAMLOPT_EXISTS)
BYTE_ENABLED = true

MENHIR_ENABLED = true
if $(not $(MENHIR_AVAILABLE))
  ConfMsgError($'menhir not found')
MENHIR_FLAGS += --infer --explain

OCAMLFLAGS = -thread -bin-annot -annot -warn-error P
OCAMLCFLAGS =
OCAMLOPTFLAGS =
OCAML_LINK_FLAGS +=
OCAML_BYTE_LINK_FLAGS =
OCAML_NATIVE_LINK_FLAGS =
OCAMLFINDFLAGS = -syntax camlp4o

clean:
  rm -rf _build OMakefile.omc OMakeroot.omc .omakedb .omakedb.lock

SOURCES_BASE[] =
    purel_internal_pervasives
    purel
    purel_ast
    purel_expr
    purel_lexer
    purel_parser

SOURCES= $(add-wrapper src/lib/, .ml, $(SOURCES_BASE))

.SUBDIRS: .
    if $(not $(file-exists _build/))
      mkdir -p _build/lib

    vmount(-l, src/, _build/)


    .SUBDIRS: _build/lib

        .DEFAULT: $(OCamlLibrary $(LIB), $(SOURCES_BASE))

        REQUIRES=$(concat \,, $(DEPENDENCIES))

        install: $(LIB).cma $(LIB).cmxa META uninstall
          ocamlfind install $(LIB) META *.cm[iox] $(LIB).cma $(LIB).cmxa $(LIB).a

        uninstall:
          ocamlfind remove $(LIB)

        META:
          echo "description = \"A pure functional language.\"" > META
          echo "version = \"$(LIB_VERSION)\"" >> META
          echo "archive(byte) = \"$(LIB).cma\"" >> META
          echo "archive(native) = \"$(LIB).cmxa\"" >> META
          echo "requires = \"$(REQUIRES)\"" >> META
