#!/usr/bin/env bash


usage() {
    echo "usage: $0 {help, configure, boot, packages, dev-setup, ocsigen}"
}

if [ "$1" = "-h" ] || [ "$1" = "-help" ] || [ "$1" = "" ]; then
    usage
    exit 0
fi

if [ "$1" = "help" ]; then
    usage
    echo ""
    echo "configure:  create the ~./.OCaml.env file"
    echo "boot: compile ocaml, opam, and init opam"
    echo "dev-setup: clone biocaml, sequme, and hitscore and setup the local opam repo"
    echo "packages: get a ton of packages (not needed:"
    echo "          -> if dev-setup succeeds, \`opam install hitscore\` should"
    echo "             pull all the dependencies)"
    echo "ocsigen: get hitscoreweb's dependencies"
    exit 0
fi


OCAML_ENV=$HOME/.OCaml.env

if [ "$1" = "configure" ]; then

    if [ "$2" = "-help" ] ; then
        echo "usage: $0 configure [COMPUTER]"
        echo "Where COMPUTER may be 'bowery', 'rabbot'"
        exit 1
    fi
    #the_prefix=$2
    the_computer=$2
        
    OUT=$OCAML_ENV

    rm -f $OUT

    echo "# Generated on $(date)" > $OUT

    if [ "$the_computer" = "bowery" ] ; then
        echo 'unset ARCHIVE' >> $OUT
        echo '. /share/apps/git/1.7.6.3/intel/env.sh' >> $OUT
        echo 'module add postgresql' >> $OUT
        echo 'module add sqlite' >> $OUT
    fi
    if [ "$the_computer" = "rabbot" ] ; then
        echo 'module () { ' >> $OUT
        echo '    eval `/opt/modules/bin/modulecmd bash $*`' >> $OUT
        echo '}' >> $OUT
        echo 'module load git' >> $OUT
        echo 'module load postgresql' >> $OUT
    fi
    echo "unset OCAML_TOPLEVEL_PATH" >> $OUT
    echo "unset OCAMLPATH" >> $OUT
    echo "unset OCAMLPREFIX" >> $OUT
    echo "unset OCAMLFIND_DESTDIR" >> $OUT
    echo "export OPAM='$HOME/.opam/3.12.1/bin/opam'" >> $OUT
    echo 'eval `$OPAM config -env` # opam_profile_line' >> $OUT
    echo 'alias ocaml="ledit -h ~/.ocaml_history -u -l 200 ocaml"' >> $OUT
    echo "Add  . $OUT   to your bashrc or so"

    exit 0

fi


. $OCAML_ENV
export WGET="wget --no-check-certificate"

if [ "$1" = "boot" ]; then

    set -e
    if [ "$2" = "" ]; then
        
        tmp_dir=/tmp/bootopam$$
        mkdir -p $tmp_dir
    
        echo "Working in $tmp_dir"
        cd $tmp_dir
        
        ocaml_name=ocaml-4.00.1
        ocaml_url=http://caml.inria.fr/pub/distrib/ocaml-4.00/$ocaml_name.tar.bz2
        
        $WGET $ocaml_url
        
        tar xvfj $ocaml_name.tar.bz2
        
        cd $ocaml_name
    
        ./configure -prefix $tmp_dir
       
        make world > world.log 2>&1
        #make opt > opt.log 2>&1
        #make opt.opt > optopt.log 2>&1
        
        make install
        
        cd ..
    
        export PATH=$tmp_dir/bin:$PATH
        
        #OPAM_TAG=0.8.1
        OPAM_TAG=master
        $WGET https://github.com/OCamlPro/opam/tarball/master -O opam.tgz
        tar xvfz opam.tgz
        cd OCamlPro-opam-*
        ./configure --prefix $tmp_dir
        make
    #    make opt
        make install
    else 
        export PATH=$2/bin:$PATH
        rm -fr ~/.opam
    fi
    echo Init
    opam init
    echo Change remote
    opam remote -rm default
    opam remote -add custom git://github.com/smondet/opam-repository.git
    echo "Switch to 3.12.1"
    opam --yes switch 3.12.1
    echo Upgrade
    opam --yes upgrade
    echo "Install opam"
    opam --yes install opam ledit
    
    
fi;
    
if [ "$1" = "packages" ]; then
    . $OCAML_ENV
    opam --yes install lwt ssl core core_extended oasis xmlm batteries ledit && \
    opam --yes install camlzip sqlite3-ocaml getopt && \
    opam --yes install pgocaml && \
    opam --yes install cryptokit && \
    opam --yes install simple_pam && \
    opam --yes --no-checksums install re && \
        echo "All OK !"
fi

do_smth () {
    tmp1=`mktemp`
    ($1) > $tmp1 2>&1
    if [ $? -ne 0 ]; then
        echo "$1 ---> Not 0 (`cat $tmp1`)"
        tmp3=`mktemp`
        eval "$2" > $tmp3 2>&1
        tmp2=`mktemp`
        $1 > $tmp2 2>&1
        if [ $? -ne 0 ]; then
            echo "$1 ---> Not 0 Again (`cat $tmp2`)\n  and $2 said\n (`cat $tmp3`)\n"
            exit 2
        else
            echo "$1 ----> SUCCESS!"
        fi
    else
        echo "$1  ------>  OK!"
    fi
}

if [ "$1" = "dev-setup" ] ; then

    if [ "$2" = "" ] || [ "$2" = "-help" ] || [ "$2" = "-h" ] ; then
        echo "usage: $0 hitscore  /path/to/put/stuff/in "
        exit 1
    fi
    if [ "$4" = "http" ] ; then
        BIOCAML_GIT=http://github.com/biocaml/biocaml.git
        SEQUME_GIT=https://github.com/agarwal/sequme.git
        HITSCORE_GIT=https://github.com/agarwal/hitscore
    else
        BIOCAML_GIT=git@github.com:biocaml/biocaml
        SEQUME_GIT=git@github.com:agarwal/sequme
        HITSCORE_GIT=git@github.com:agarwal/hitscore
    fi
    mkdir -p $2
    path=`cd $2 ; pwd`


    mkdir -p $path
    cd $path
    do_smth "ls $path/biocaml/src/lib/biocaml.ml" "git clone $BIOCAML_GIT  && cd biocaml && git checkout --track origin/core10808"

    cd $path
    do_smth "ls $path/sequme/src/lib/sequme_flow.ml" " git clone $SEQUME_GIT  "

    cd $path
    do_smth "ls $path/hitscore/src/lib/hitscore.ml" "
git clone $HITSCORE_GIT && \
cd hitscore && \
git checkout -t origin/core10808"

    set -e
    opam remote -add sequme $path/sequme/src/opam/
    opam pin biocaml $path/biocaml/
    opam pin sequme $path/sequme
    opam pin hitscore $path/hitscore
    opam update


fi

if [ "$1" = "ocsigen" ]; then
    
    opam install eliom re
    
    
fi



